{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Produto/MarcaColumns.ts", "../../../Modules/ServerTypes/Produto/MarcaRow.ts", "../../../Modules/ServerTypes/Produto/MarcaService.ts", "../../../Modules/ServerTypes/Produto/ProdutoColumns.ts", "../../../Modules/ServerTypes/Produto/ProdutoRow.ts", "../../../Modules/ServerTypes/Produto/ProdutoService.ts", "../../../Modules/ServerTypes/Produto/TipodeProdutoColumns.ts", "../../../Modules/ServerTypes/Produto/TipodeProdutoRow.ts", "../../../Modules/ServerTypes/Produto/TipodeProdutoService.ts", "../../../Modules/ServerTypes/Produto/ViscosidadeColumns.ts", "../../../Modules/ServerTypes/Produto/ViscosidadeRow.ts", "../../../Modules/ServerTypes/Produto/ViscosidadeService.ts", "../../../Modules/ServerTypes/Produto/MarcaForm.ts", "../../../Modules/ServerTypes/Produto/ProdutoForm.ts", "../../../Modules/ServerTypes/Produto/TipodeProdutoForm.ts", "../../../Modules/ServerTypes/Produto/ViscosidadeForm.ts"],
  "sourcesContent": ["\uFEFFexport class MarcaColumns {\r\n    static columnsKey = 'Produto.Marca';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MarcaRow {\n    IdMarca?: number;\n    Nome?: string;\n    MarcaNacional?: boolean;\n}\n\nexport abstract class MarcaRow {\n    static readonly idProperty = 'IdMarca';\n    static readonly nameProperty = 'Nome';\n    static readonly localTextPrefix = 'Produto.Marca';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MarcaRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { MarcaRow } from \"./MarcaRow\";\n\nexport namespace MarcaService {\n    export const baseUrl = 'Produto/Marca';\n\n    export declare function Create(request: SaveRequest<MarcaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MarcaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MarcaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MarcaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Produto/Marca/Create\",\n        Update: \"Produto/Marca/Update\",\n        Delete: \"Produto/Marca/Delete\",\n        Retrieve: \"Produto/Marca/Retrieve\",\n        List: \"Produto/Marca/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MarcaService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class ProdutoColumns {\r\n    static columnsKey = 'Produto.Produto';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ProdutoRow {\n    IdProduto?: number;\n    TipoProduto?: number;\n    NomeProduto?: string;\n    Marca?: number;\n    Viscosidade?: number;\n    Descricao?: string;\n    Preco?: number;\n    TipoProdutoDescricao?: string;\n    MarcaNome?: string;\n    ViscosidadeSiglaViscosidade?: string;\n}\n\nexport abstract class ProdutoRow {\n    static readonly idProperty = 'IdProduto';\n    static readonly nameProperty = 'NomeProduto';\n    static readonly localTextPrefix = 'Produto.Produto';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ProdutoRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ProdutoRow } from \"./ProdutoRow\";\n\nexport namespace ProdutoService {\n    export const baseUrl = 'Produto/Produto';\n\n    export declare function Create(request: SaveRequest<ProdutoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ProdutoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProdutoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProdutoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Produto/Produto/Create\",\n        Update: \"Produto/Produto/Update\",\n        Delete: \"Produto/Produto/Delete\",\n        Retrieve: \"Produto/Produto/Retrieve\",\n        List: \"Produto/Produto/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProdutoService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TipodeProdutoColumns {\r\n    static columnsKey = 'Produto.TipodeProduto';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TipodeProdutoRow {\n    IdTipoProduto?: number;\n    Descricao?: string;\n}\n\nexport abstract class TipodeProdutoRow {\n    static readonly idProperty = 'IdTipoProduto';\n    static readonly nameProperty = 'Descricao';\n    static readonly localTextPrefix = 'Produto.TipodeProduto';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TipodeProdutoRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TipodeProdutoRow } from \"./TipodeProdutoRow\";\n\nexport namespace TipodeProdutoService {\n    export const baseUrl = 'Produto/TipodeProduto';\n\n    export declare function Create(request: SaveRequest<TipodeProdutoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TipodeProdutoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TipodeProdutoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TipodeProdutoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Produto/TipodeProduto/Create\",\n        Update: \"Produto/TipodeProduto/Update\",\n        Delete: \"Produto/TipodeProduto/Delete\",\n        Retrieve: \"Produto/TipodeProduto/Retrieve\",\n        List: \"Produto/TipodeProduto/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TipodeProdutoService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class ViscosidadeColumns {\r\n    static columnsKey = 'Produto.Viscosidade';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ViscosidadeRow {\n    IdViscosidade?: number;\n    SiglaViscosidade?: string;\n}\n\nexport abstract class ViscosidadeRow {\n    static readonly idProperty = 'IdViscosidade';\n    static readonly nameProperty = 'SiglaViscosidade';\n    static readonly localTextPrefix = 'Produto.Viscosidade';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ViscosidadeRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ViscosidadeRow } from \"./ViscosidadeRow\";\n\nexport namespace ViscosidadeService {\n    export const baseUrl = 'Produto/Viscosidade';\n\n    export declare function Create(request: SaveRequest<ViscosidadeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ViscosidadeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ViscosidadeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ViscosidadeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Produto/Viscosidade/Create\",\n        Update: \"Produto/Viscosidade/Update\",\n        Delete: \"Produto/Viscosidade/Delete\",\n        Retrieve: \"Produto/Viscosidade/Retrieve\",\n        List: \"Produto/Viscosidade/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ViscosidadeService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MarcaForm {\n    Nome: StringEditor;\n    MarcaNacional: BooleanEditor;\n}\n\nexport class MarcaForm extends PrefixedContext {\n    static formKey = 'Produto.Marca';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MarcaForm.init)  {\n            MarcaForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = BooleanEditor;\n\n            initFormType(MarcaForm, [\n                'Nome', w0,\n                'MarcaNacional', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { IntegerEditor, StringEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ProdutoForm {\n    TipoProduto: IntegerEditor;\n    NomeProduto: StringEditor;\n    Marca: IntegerEditor;\n    Viscosidade: IntegerEditor;\n    Descricao: StringEditor;\n    Preco: DecimalEditor;\n}\n\nexport class ProdutoForm extends PrefixedContext {\n    static formKey = 'Produto.Produto';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProdutoForm.init)  {\n            ProdutoForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = DecimalEditor;\n\n            initFormType(ProdutoForm, [\n                'TipoProduto', w0,\n                'NomeProduto', w1,\n                'Marca', w0,\n                'Viscosidade', w0,\n                'Descricao', w1,\n                'Preco', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TipodeProdutoForm {\n    Descricao: StringEditor;\n}\n\nexport class TipodeProdutoForm extends PrefixedContext {\n    static formKey = 'Produto.TipodeProduto';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TipodeProdutoForm.init)  {\n            TipodeProdutoForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(TipodeProdutoForm, [\n                'Descricao', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ViscosidadeForm {\n    SiglaViscosidade: StringEditor;\n}\n\nexport class ViscosidadeForm extends PrefixedContext {\n    static formKey = 'Produto.Viscosidade';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ViscosidadeForm.init)  {\n            ViscosidadeForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(ViscosidadeForm, [\n                'SiglaViscosidade', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["MarcaColumns", "__name", "import_q", "MarcaRow", "__name", "import_q", "MarcaService", "x", "r", "s", "o", "ProdutoColumns", "__name", "import_q", "ProdutoRow", "__name", "import_q", "ProdutoService", "x", "r", "s", "o", "TipodeProdutoColumns", "__name", "import_q", "TipodeProdutoRow", "__name", "import_q", "TipodeProdutoService", "x", "r", "s", "o", "ViscosidadeColumns", "__name", "import_q", "ViscosidadeRow", "__name", "import_q", "ViscosidadeService", "x", "r", "s", "o", "import_corelib", "import_q", "_MarcaForm", "prefix", "w0", "w1", "MarcaForm", "__name", "import_corelib", "import_q", "_ProdutoForm", "prefix", "w0", "w1", "w2", "ProdutoForm", "__name", "import_corelib", "import_q", "_TipodeProdutoForm", "prefix", "w0", "TipodeProdutoForm", "__name", "import_corelib", "import_q", "_ViscosidadeForm", "prefix", "w0", "ViscosidadeForm", "__name"]
}
