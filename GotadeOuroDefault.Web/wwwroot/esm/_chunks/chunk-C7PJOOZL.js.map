{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Servico/ServicoColumns.ts", "../../../Modules/ServerTypes/Servico/ServicoRow.ts", "../../../Modules/ServerTypes/Servico/ServicoService.ts", "../../../Modules/ServerTypes/Servico/TipodeServicoColumns.ts", "../../../Modules/ServerTypes/Servico/TipodeServicoRow.ts", "../../../Modules/ServerTypes/Servico/TipodeServicoService.ts", "../../../Modules/ServerTypes/Servico/ServicoForm.ts", "../../../Modules/ServerTypes/Servico/TipodeServicoForm.ts"],
  "sourcesContent": ["\uFEFFexport class ServicoColumns {\r\n    static columnsKey = 'Servico.Servico';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ServicoRow {\n    IdServico?: number;\n    TipoServico?: number;\n    Descricao?: string;\n    Preco?: number;\n    TipoServicoNome?: string;\n}\n\nexport abstract class ServicoRow {\n    static readonly idProperty = 'IdServico';\n    static readonly nameProperty = 'Descricao';\n    static readonly localTextPrefix = 'Servico.Servico';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ServicoRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ServicoRow } from \"./ServicoRow\";\n\nexport namespace ServicoService {\n    export const baseUrl = 'Servico/Servico';\n\n    export declare function Create(request: SaveRequest<ServicoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ServicoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ServicoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ServicoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Servico/Servico/Create\",\n        Update: \"Servico/Servico/Update\",\n        Delete: \"Servico/Servico/Delete\",\n        Retrieve: \"Servico/Servico/Retrieve\",\n        List: \"Servico/Servico/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ServicoService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TipodeServicoColumns {\r\n    static columnsKey = 'Servico.TipodeServico';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TipodeServicoRow {\n    IdTipoServico?: number;\n    Nome?: string;\n}\n\nexport abstract class TipodeServicoRow {\n    static readonly idProperty = 'IdTipoServico';\n    static readonly nameProperty = 'Nome';\n    static readonly localTextPrefix = 'Servico.TipodeServico';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TipodeServicoRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TipodeServicoRow } from \"./TipodeServicoRow\";\n\nexport namespace TipodeServicoService {\n    export const baseUrl = 'Servico/TipodeServico';\n\n    export declare function Create(request: SaveRequest<TipodeServicoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TipodeServicoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TipodeServicoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TipodeServicoRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Servico/TipodeServico/Create\",\n        Update: \"Servico/TipodeServico/Update\",\n        Delete: \"Servico/TipodeServico/Delete\",\n        Retrieve: \"Servico/TipodeServico/Retrieve\",\n        List: \"Servico/TipodeServico/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TipodeServicoService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, StringEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ServicoForm {\n    TipoServico: IntegerEditor;\n    Descricao: StringEditor;\n    Preco: DecimalEditor;\n}\n\nexport class ServicoForm extends PrefixedContext {\n    static formKey = 'Servico.Servico';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ServicoForm.init)  {\n            ServicoForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = DecimalEditor;\n\n            initFormType(ServicoForm, [\n                'TipoServico', w0,\n                'Descricao', w1,\n                'Preco', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TipodeServicoForm {\n    Nome: StringEditor;\n}\n\nexport class TipodeServicoForm extends PrefixedContext {\n    static formKey = 'Servico.TipodeServico';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TipodeServicoForm.init)  {\n            TipodeServicoForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(TipodeServicoForm, [\n                'Nome', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAAqB,CAE7B,EAFcC,EAAAD,EAAA,kBAAAA,EACH,WAAa,kBCDvB,IAAAE,EAA4B,SAUtB,IAAeC,EAAf,KAA0B,CAUjC,EAVsBC,EAAAD,EAAA,cAAAA,EACF,WAAa,YADXA,EAEF,aAAe,YAFbA,EAGF,gBAAkB,kBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAwB,ECnBpD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,kBAQVA,EAAA,QAAU,CACnB,OAAQ,yBACR,OAAQ,yBACR,OAAQ,yBACR,SAAU,2BACV,KAAM,sBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAgBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC1C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAA2B,CAEnC,EAFcC,EAAAD,EAAA,wBAAAA,EACH,WAAa,wBCDvB,IAAAE,EAA4B,SAOtB,IAAeC,EAAf,KAAgC,CAUvC,EAVsBC,EAAAD,EAAA,oBAAAA,EACF,WAAa,gBADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,wBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA8B,EChB1D,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,wBAQVA,EAAA,QAAU,CACnB,OAAQ,+BACR,OAAQ,+BACR,OAAQ,+BACR,SAAU,iCACV,KAAM,4BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA4E,SAC7EC,EAA6B,SAQtB,IAAMC,EAAN,cAA0B,iBAAgB,CAI7C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAY,KAAO,CACpBA,EAAY,KAAO,GAEnB,IAAIE,EAAK,gBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaJ,EAAa,CACtB,cAAeE,EACf,YAAaC,EACb,QAASC,CACb,CAAC,CACL,CACJ,CACJ,EArBaC,EAANL,EAAMM,EAAAD,EAAA,eAAAA,EACF,QAAU,kBCVpB,IAAAE,EAA8C,SAC/CC,EAA6B,SAMtB,IAAMC,EAAN,cAAgC,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,kBAET,gBAAaF,EAAmB,CAC5B,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,qBAAAA,EACF,QAAU",
  "names": ["ServicoColumns", "__name", "import_q", "ServicoRow", "__name", "import_q", "ServicoService", "x", "r", "s", "o", "TipodeServicoColumns", "__name", "import_q", "TipodeServicoRow", "__name", "import_q", "TipodeServicoService", "x", "r", "s", "o", "import_corelib", "import_q", "_ServicoForm", "prefix", "w0", "w1", "w2", "ServicoForm", "__name", "import_corelib", "import_q", "_TipodeServicoForm", "prefix", "w0", "TipodeServicoForm", "__name"]
}
